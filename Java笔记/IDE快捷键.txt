
========================== IDEA原生快捷键 ========================

Ctrl+N：查找类文件
Ctrl+Shift+N：查找文件

Ctrl+Shift+F:在全局文件中查找字符串
Ctrl+Shift+R：在全局中替换字符串

Ctrl+F：在当前文件中查找
Ctrl+R：在当前文件中替换字符串

Ctrl+Alt+B：定位至选中类或者方法的具体实现（找到被调用的方法）
Ctrl+Alt+H：显示当前方法的调用层次（方法在哪调用）

Ctrl+U：直接定位至当前方法override或者当前类implements的定义处
Ctrl+F12：显示当前文件的文件结构（所有方法、属性等）

Ctrl+H：显示当前类的继承层次或接口的实现类
Ctrl+Shift+H：显示当前方法的继承层次

Ctrl+P：方法参数提示
Ctrl+Shitf+空格：对象. 提示

Alt+Insert：产生构造方法，get/set方法等

Ctrl+Alt+T：包上try-catch
Ctrl+Shift+Enter：将输入的if，for，函数等等补上{}或者；使代码语句完整

Ctrl+Shift+U：切换大小写
Ctrl+Alt+U: 当前类或方法的继承图

Ctrl+Alt+L：格式化代码
Ctrl+Alt+O：优化import
Ctrl+G：定位到文件某一行

Ctrl+Shift+Enter/Shift+Enter：在当前行的下方空一行
Ctrl+Alt+Enter：在当前行的上方空一行

Ctrl+Shitft+向下箭头：将光标所在的代码块向下整体移动
Ctrl+Shift+向上箭头：将光标所在的代码块向上整体移动
Alt+Shift+向下箭头：将行向下移动
Alt+Shift+向上箭头：将行向上移动

Ctrl+Y：删除当前行
Ctrl+D:复制当前行

Ctrl+O：重写基类方法
Ctrl+I：实现基类或接口中的方法

Ctrl + =：展开代码
Ctrl + -：收缩代码
Ctrl+Shift+=：展开所有代码
Ctrl+Shift+-：收缩所有代码

===============================================================


Ctrl+Shift+Z：重做

Ctrl+Shift+J：将选中的行合并成一行

Alt+向左箭头：返回上次光标位置

Alt+向右箭头：返回至后一次光标位置

Ctrl+Shift+Backspace：返回上次编辑位置

Ctrl+Shift+反斜杠：返回后一次编辑位置

Ctrl+B：定位至变量定义的位置

Ctrl+Shift+B:直接定位至光标所在变量的类型定义

Ctrl+Alt+F12：显示当前文件的路径，并可以方便的将相关父路径打开

F2：定位至下一个错误处

Shift+F2：定位至前一个错误处

Ctrl+Alt+向上箭头：查找前一个变量共现的地方

Ctrl+Alt+向下箭头：查找下一个变量共现的地方

Ctrl+Alt+Shift+向左箭头：将元素向左移动

Ctrl+Alt+Shift+向右箭头：将元素向右移动

Alt+F7：查找当前变量的使用，并列表显示

Ctrl+Alt+F7：查找当前变量的使用，并直接对话框提示

Ctrl+F7：在文件中查找符号的使用

Ctrl+Shift+F7：在文件中高亮显示变量的使用

Ctrl+Shitf+Delete：去除相关的包装代码

Alt+/：自动完成

Alt+Enter：自动提示完成，抛出异常

Ctrl+J：插入Live Template 快速插入一行或者多行代码

Ctrl+Alt+J：使用Live Template包装

Ctrl+/：使用//注释

Ctrl+Shift+/：使用/**/注释

Ctrl+Alt+I：自动缩进行

Ctrl+]：快速跳转至诸如{}围起来的代码块的结尾处

Ctrl+[：快速跳转至诸如{}围起来的代码块的开头处

Ctrl+Delete：删除光标所在至单词结尾处的所有字符

Ctrl+Backspace：删除光标所在至单词开头处的所有字符

Ctrl+向左箭头：将光标移至前一个单词

Ctrl+向右箭头：将光标移至后一个单词

Ctrl+向上箭头：向上滚动一行

Ctrl+向下箭头：向下滚动一行

Ctrl+W：选中整个单词

Shift+F6：重命名

Ctrl+F6：更改函数签名

Ctrl+Shift+F6：更改类型


IDEA常用快捷键（先导入eclipse快捷键jar包）
	11 如何查看源码 (class) ctrl + 选中指定的结构 或 ctrl + shift + t
	15 查看继承关系(type hierarchy) F4
	27 查看类的结构：类似于 eclipse 的 outline ctrl+o
	28 重构：修改变量名与方法名(rename) alt+shift+r
	31 查看文档说明(quick documentation) F2
	32 收起所有的方法(collapse all) alt + shift + c
	33 打开所有方法(expand all) alt+shift+x
	34 打开代码所在硬盘文件夹(show in explorer) ctrl+shift+x

	36 局部变量抽取为成员变量(introduce field) alt+shift+f
	37 查找/替换(当前) ctrl+f
	38 查找(全局)  ctrl+h
	39 查找文件 double Shift
	40 查看类的继承结构图(Show UML Diagram) ctrl + shift + u
	41 查看方法的多层重写结构(method hierarchy) ctrl+alt+h
	42 添加到收藏(add to favorites) ctrl+alt+f
	43 抽取方法(Extract Method) alt+shift+m
	44 打开最近修改的文件(Recently Files) ctrl+E
	45 关闭当前打开的代码栏(close) ctrl + w
	46 关闭打开的所有代码栏(close all) ctrl + shift + w
	47 快速搜索类中的错误(next highlighted error) ctrl + shift + q
	48 选择要粘贴的内容(Show in Explorer) ctrl+shift+v
	49 查找方法在哪里被调用(Call Hierarchy) ctrl+shift+h

Eclipse中的快捷键：
 * 1.补全代码的声明：alt + /
 * 2.快速修复: ctrl + 1
 * 3.批量导包：ctrl + shift + o
 * 4.使用单行注释：ctrl + /
 * 5.使用多行注释： ctrl + shift + /
 * 6.取消多行注释：ctrl + shift + \
 * 7.复制指定行的代码：ctrl + alt + down 或 ctrl + alt + up
 * 8.删除指定行的代码：ctrl + d
 * 9.上下移动代码：alt + up  或 alt + down
 * 10.切换到下一行代码空位：shift + enter
 * 11.切换到上一行代码空位：ctrl + shift + enter
 * 12.如何查看源码：ctrl + 选中指定的结构  或  ctrl + shift + t
 * 13.退回到前一个编辑的页面：alt + left 
 * 14.进入到下一个编辑的页面(针对于上面那条来说的)：alt + right
 * 15.光标选中指定的类，查看继承树结构：ctrl + t
 * 18.反撤销： ctrl + y
 * 23.格式化代码： ctrl + shift + f
 * 24.选中数行，整体往后移动：tab
 * 25.选中数行，整体往前移动：shift + tab
 * 26.在当前类中，显示类结构，并支持搜索指定的方法、属性等：ctrl + o
 * 27.批量修改指定的变量名、方法名、类名等：alt + shift + r
 * 28.选中的结构的大小写的切换：变成大写： ctrl + shift + x
 * 29.选中的结构的大小写的切换：变成小写：ctrl + shift + y
 * 30.调出生成getter/setter/构造器等结构： alt + shift + s
 * 31.显示当前选择资源(工程 or 文件)的属性：alt + enter
 * 32.快速查找：参照选中的Word快速定位到下一个 ：ctrl + k



JDK：java development kit  java开发工具包
JRE：java runtime environment   java运行环境 
JVM：java virtual machine   java虚拟机

JDK = JRE + 开发工具集
JRE = JVM + java标准类库

.java 是源文件
.class 是字节码文件
源文件中可以有多个类，只有一个public类，编译时产生多个字节码文件，源文件要以public类名命名

API文档：application programming interface 应用程序编程接口
args：arguments 参数



